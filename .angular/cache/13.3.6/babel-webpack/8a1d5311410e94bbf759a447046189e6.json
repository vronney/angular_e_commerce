{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(http) {\n      this.http = http;\n      this.count = new BehaviorSubject(0);\n      this.count$ = this.count.asObservable();\n      this.items = [];\n      this.updatedItems = [];\n    }\n\n    setCount(countVal) {\n      this.count.next(countVal);\n    }\n\n    addToCart(product) {\n      this.items.push(product);\n    }\n\n    getShippingPrices() {\n      return this.http.get('assets/shipping.json');\n    }\n\n    getSalesTaxes() {\n      return this.http.get('assets/taxes.json');\n    }\n\n    getItems() {\n      return this.items;\n    }\n\n    removeItem(id) {\n      if (this.items.length === 1) {\n        this.items = [];\n      }\n\n      this.items.filter(item => {\n        if (item.id !== id) {\n          this.updatedItems.push(item);\n        }\n      });\n      this.clearCart();\n      this.items = this.updatedItems;\n      this.updatedItems = [];\n    }\n\n    increaseCount(itemInfo) {\n      this.items.map(item => {\n        if (item.id === itemInfo.id) {\n          item.quantity++;\n          item.total = item.unitPrice * item.quantity;\n        }\n      });\n    }\n\n    decreaseCount(itemInfo) {\n      this.items.map(item => {\n        if (item.id === itemInfo.id) {\n          item.quantity--;\n          item.total = item.total - item.unitPrice;\n\n          if (item.quantity < 1) {\n            item.quantity = 1;\n            item.total = 0;\n            item.unitPrice = item.unitPrice;\n          }\n        }\n      });\n    }\n\n    resetQuantity() {\n      this.items.map(item => {\n        item.unitPrice = item.unitPrice;\n        item.total = 0;\n        item.quantity = 1;\n      });\n    }\n\n    clearCart() {\n      this.items = [];\n      return this.items;\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}